<idea-plugin version="2">
    <id>org.rust.lang</id>
    <name>Rust</name>

    <vendor url="https://github.com/intellij-rust/intellij-rust"/>

    <description><![CDATA[
      Rust language support
    ]]></description>

    <change-notes><![CDATA[
        <a href="https://intellij-rust.github.io/2016/07/25/changelog-6.html">
                 https://intellij-rust.github.io/2016/07/25/changelog-6.html
        </a>
    ]]>
    </change-notes>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="143.2287.1" until-build="162.*"/>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
         on how to target different products -->

    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="idea-only.xml">com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Rust -->

        <!-- File-type Factory -->

        <fileTypeFactory implementation="org.rust.lang.RustFileTypeFactory"/>

        <!-- Parser -->

        <lang.parserDefinition language="Rust" implementationClass="org.rust.lang.core.RustParserDefinition"/>
        <stubElementTypeHolder class="org.rust.lang.core.psi.RustCompositeElementTypes"/>

        <!-- Syntax Highlighter -->

        <lang.syntaxHighlighterFactory language="Rust" implementationClass="org.rust.ide.highlight.RustHighlighterFactory"/>

        <!-- Formatter -->

        <lang.formatter language="Rust" implementationClass="org.rust.ide.formatter.RustFormattingModelBuilder"/>

        <!-- Commenter -->

        <lang.commenter language="Rust" implementationClass="org.rust.ide.commenter.RustCommenter"/>

        <!-- Matchers -->

        <lang.braceMatcher language="Rust" implementationClass="org.rust.ide.typing.RustBraceMatcher"/>
        <lang.quoteHandler language="Rust" implementationClass="org.rust.ide.typing.RustQuoteHandler"/>

        <!-- Doc-Provider -->

        <lang.documentationProvider language="Rust" implementationClass="org.rust.ide.docs.RustDocumentationProvider"/>

        <!-- Structure View -->

        <lang.psiStructureViewFactory language="Rust"
                                      implementationClass="org.rust.ide.structure.RustPsiStructureViewFactory"/>

        <!-- Usages Provider -->

        <lang.findUsagesProvider language="Rust" implementationClass="org.rust.ide.search.RustFindUsagesProvider"/>

        <!-- Smart Enter Processor -->
        <lang.smartEnterProcessor language="Rust"
                                  implementationClass="org.rust.ide.typing.assist.RustSmartEnterProcessor"/>

        <!-- Navigation -->

        <gotoClassContributor implementation="org.rust.ide.navigation.goto.RustClassNavigationContributor"/>
        <gotoSymbolContributor implementation="org.rust.ide.navigation.goto.RustSymbolNavigationContributor"/>
        <codeInsight.gotoSuper language="Rust" implementationClass="org.rust.ide.navigation.goto.RustGotoSuperHandler"/>

        <!-- Hints -->

        <codeInsight.typeInfo language="Rust" implementationClass="org.rust.ide.hints.RustExpressionTypeProvider"/>

        <!-- Annotator -->

        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustHighlightingAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustLiteralAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustExpressionAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustItemsAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustInvalidSyntaxAnnotator"/>

        <!-- Completion -->
        <completion.contributor language="Rust" implementationClass="org.rust.lang.core.completion.RustCompletionContributor"/>

        <!-- Description Provider -->

        <elementDescriptionProvider implementation="org.rust.ide.RustDescriptionProvider"/>

        <!-- Spell-checker -->

        <spellchecker.support language="Rust" implementationClass="org.rust.ide.spelling.RustSpellcheckingStrategy"/>

        <!-- Handlers -->

        <enterHandlerDelegate implementation="org.rust.ide.typing.RustEnterInLineCommentHandler" id="RustEnterInComments"/>

        <!-- Code Style -->

        <codeStyleSettingsProvider implementation="org.rust.ide.formatter.settings.RustCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="org.rust.ide.formatter.settings.RustLanguageCodeStyleSettingsProvider"/>

        <!-- Color Settings -->

        <colorSettingsPage implementation="org.rust.ide.colors.RustColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="org/rust/ide/colors/RustDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="org/rust/ide/colors/RustDarcula.xml"/>

        <!-- Inspections -->

        <localInspection language="Rust" groupName="Rust"
                         displayName="Approximate Constants"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustApproxConstantInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Self Convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustSelfConventionInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Unresolved reference"
                         enabledByDefault="false" level="ERROR"
                         implementationClass="org.rust.ide.inspections.RustUnresolvedReferenceInspection"/>

        <localInspection language="Rust" groupName="Redeclared symbols"
                         displayName="Duplicate field"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.rust.ide.inspections.duplicates.RustDuplicateStructFieldInspection"/>

        <!-- Surrounders -->
        <lang.surroundDescriptor language="Rust"
                                 implementationClass="org.rust.ide.surroundWith.RustExpressionSurroundDescriptor"/>
        <lang.surroundDescriptor language="Rust"
                                 implementationClass="org.rust.ide.surroundWith.RustStatementsSurroundDescriptor"/>

        <lang.foldingBuilder language="Rust" implementationClass="org.rust.ide.folding.RustFoldingBuilder"/>

        <!-- Live Templates -->
        <defaultLiveTemplatesProvider implementation="org.rust.ide.template.RustLiveTemplatesProvider"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Generic"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Struct"/>

        <!-- Intentions -->

        <intentionAction>
            <className>org.rust.ide.intentions.ContractModuleIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.ExtractInlineModuleIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.AddDeriveIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.RemoveCurlyBracesIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.AddCurlyBracesIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.RemoveParenthesesFromExprIntention</className>
            <category>Rust</category>
        </intentionAction>

        <!-- Run Configurations -->

        <programRunner implementation="org.rust.cargo.runconfig.RustRunner"/>
        <configurationType implementation="org.rust.cargo.runconfig.CargoCommandRunConfigurationType" />
        <runConfigurationProducer
            implementation="org.rust.cargo.runconfig.producers.CargoExecutableRunConfigurationProducer"/>
        <runConfigurationProducer
            implementation="org.rust.cargo.runconfig.producers.CargoTestRunConfigurationProducer"/>

        <!-- Cargo -->

        <projectConfigurable instance="org.rust.cargo.project.configurable.RustProjectConfigurable"
                             displayName="Rust"
                             groupId="language"/>
        <projectService serviceInterface="org.rust.cargo.project.settings.RustProjectSettingsService"
                        serviceImplementation="org.rust.cargo.project.settings.impl.RustProjectSettingsServiceImpl"/>


        <!-- Icon Provider -->

        <iconProvider implementation="org.rust.cargo.icons.CargoIconProvider"/>

        <!-- Indices -->

        <stubIndex implementation="org.rust.lang.core.stubs.index.RustModulesIndex"/>
        <stubIndex implementation="org.rust.lang.core.stubs.index.RustNamedElementIndex"/>
        <stubIndex implementation="org.rust.lang.core.stubs.index.RustGotoClassIndex"/>

        <stubIndex implementation="org.rust.lang.core.resolve.indexes.RustImplIndex"/>
        <stubIndex implementation="org.rust.lang.core.resolve.indexes.RustAliasIndex"/>

        <!-- Notification Providers -->

        <editorNotificationProvider implementation="org.rust.ide.notifications.MissingToolchainNotificationProvider" />

    </extensions>

    <application-components>
        <component>
            <implementation-class>org.rust.ide.update.UpdateComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <module-components>
        <component>
            <interface-class>org.rust.cargo.project.workspace.CargoProjectWorkspace</interface-class>
            <implementation-class>org.rust.cargo.project.workspace.impl.CargoProjectWorkspaceImpl</implementation-class>
        </component>
    </module-components>

    <actions>
        <action class="org.rust.ide.actions.RustCreateFileAction" id="Rust.NewRustFile" text="Rust File"
                description="Create new Rust file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

        <action id="Rust.RefreshCargoProject"
                class="org.rust.ide.actions.RefreshCargoProjectAction"
                icon="AllIcons.Actions.Refresh"/>

        <action id="Rust.RustExpandModuleAction"
                class="org.rust.ide.actions.RustExpandModuleAction"
                text="Expand module"
                description="Move this module to a dedicated directory">
            <add-to-group group-id="RefactoringMenu"/>
        </action>
    </actions>

</idea-plugin>
